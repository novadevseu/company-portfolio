---
import Layout from "@/layouts/Layout.astro";
import { getCollection, type CollectionEntry } from "astro:content";
import { motion } from "framer-motion";
import { fadeInUp } from "../../utils/animations";
import "../../styles/global.css";
import BaseLayout from "@/layouts/BaseLayout.astro";
import { BaseNavbar } from "@/components/global/BaseNavbar";
import { Footer } from "@/components/global/Footer";

// Importar imágenes manualmente
import blogImg from "../../assets/images/projects/blog-platform.png";
import chatbotImg from "../../assets/images/projects/ai-chatbot.png";

// Mapeo de imágenes a los proyectos
const projectImages = {
  "Nova Devs Blog": blogImg,
  "AI Chatbot": chatbotImg,
};

interface Props {
  project: CollectionEntry<"work">;
}

export async function getStaticPaths() {
  const projects = await getCollection("work");
  return projects.map((project) => ({
    params: { slug: project.slug },
    props: { project },
  }));
}

const { project } = Astro.props;
const { Content } = await project.render();
---

<BaseLayout title={project.data.title}>
  <BaseNavbar client:load />
  <section class="w-full py-16 pt-32 sm:pt-40 md:py-24 md:pt-32 lg:pt-40 px-6 sm:px-8 md:px-12 lg:px-16 xl:px-20 bg-background text-secondary-background">
    <div class="container mx-auto px-6 lg:px-12 xl:px-20">
      
      <!-- Título del Proyecto -->
      <motion.h1 
        client:load
        className="text-4xl md:text-5xl font-extrabold text-accent mb-6 leading-tight" 
        {...fadeInUp}
      >
        {project.data.title}
      </motion.h1>
    
      <!-- Estado del Proyecto -->
      <motion.p 
        client:load
        className="text-lg sm:text-xl md:text-xl text-secondary-background mb-6"
        {...fadeInUp}
      >
        {project.data.status}
      </motion.p>

      <!-- Imagen del Proyecto -->
      <motion.img 
        client:load
        src={projectImages[project.data.title].src}
        alt={project.data.title}
        className="w-1/2 mx-auto rounded-xl shadow-lg shadow-highlight mb-6"
        {...fadeInUp}
        loading="lazy" decoding="async"
      />

      <!-- Enlace del Proyecto -->
      <motion.a 
        client:load
        href={project.data.url}
        target="_blank"
        rel="noopener noreferrer"
        className="text-lg md:text-xl px-4 py-2 border-2 border-highlight text-secondary-background hover:shadow-lg hover:shadow-highlight transition duration-300 ease-in-out rounded-lg mb-6"
        {...fadeInUp}
      >
        Access to the project
      </motion.a>

      <!-- Descripción -->
      <motion.p 
        client:load
        className="text-lg md:text-xl text-muted mt-6 leading-relaxed"
        {...fadeInUp}
      >
        {project.data.description}
      </motion.p>
      
      <!-- Tecnologías -->
      <motion.div client:load className="mt-4 flex flex-wrap items-center gap-4" {...fadeInUp}>
        <span class="text-accent font-semibold text-lg">Technologies:</span>
        <ul class="flex flex-wrap gap-3 text-muted text-sm md:text-base">
          {project.data.tech.map((tech) => (
            <li class="px-4 py-2 bg-highlight text-secondary-background rounded-lg shadow-md">
              {tech}
            </li>
          ))}
        </ul>
      </motion.div>

      <!-- Contenido del Proyecto -->
      <motion.div 
        client:load 
        className="content mt-10 space-y-4 md:space-y-10 p-6 rounded-xl"
        {...fadeInUp}
      >
        <Content />
      </motion.div>

    </div>
  </section>
  <Footer client:load />
</BaseLayout>

<style>
  .content {
    max-width: 1000px;
    margin-inline: auto;
    color: white;
  }

  .content > :global(* + *) {
      margin: 1rem 0 0 0;
    }

  .content :global(h1) { font-size: 2.25rem; margin: 1.5rem 0 0 0; }
  .content :global(h2) { font-size: 1.875rem; margin: 1.25rem 0 0 0; }
  .content :global(h3) { font-size: 1.5rem; margin: 1rem 0 0 0; }
  .content :global(h4) { font-size: 1.25rem; margin: 0.875rem 0 0 0; }
  .content :global(h5) { font-size: 1.1rem; margin: 0.75rem 0 0 0; }

  .content :global(img) {
      border-radius: 1.5rem;
      box-shadow: var(--shadow-sm);
      background: var(--gray-999);
      border: 1px solid var(--gray-800);
    }

    .content :global(p) {
      margin: 1rem 0 0 0;
    }

    .content :global(blockquote) {
      padding: 0.5rem 1.5rem;
      font-size: var(--text-lg);
      font-family: var(--font-brand);
      font-weight: 600;
      line-height: 1.1;
      margin-inline-start: 0;
      padding-inline-start: 1.5rem;
      border-inline-start: 0.25rem solid var(--accent-dark);
      color: var(--color-accent);
    }

    .back-link,
    .entry-link,
    .content :global(a) {
      text-decoration: 1px solid underline transparent;
      text-underline-offset: 0.25em;
      transition: text-decoration-color var(--theme-transition);
    }

    .back-link:hover,
    .back-link:focus,
    .entry-link:hover,
    .entry-link:focus,
    .content :global(a:hover),
    .content :global(a:focus) {
      text-decoration-color: var(--accent);
    }

    @media (min-width: 50em) {
      .back-link {
        display: block;
        align-self: flex-start;
      }

      .details {
        flex-direction: row;
        gap: 2.5rem;
      }

      .content :global(blockquote) {
        font-size: var(--text-2xl);
      }
    }
</style>
